(defwidget time[]
    (box :class 'time' 
    '  ${time} | ${date}')
 )

(defwidget battery[]
   (box  :class 'batterybox'  :orientation  'v' :hexpand true :spacing 10
      (label :class 'batteryactive' :style "border-radius: 1rem"
         :text "  ${battery} %" )

      (label :class 'batteryactive' :style "border-radius: 1rem"
         :text "  ${round(EWW_TEMPS.CORETEMP_CORE_0, 0)}°C" )
         ; :text "   ${round(EWW_NET.wlan0.NET_DOWN  * 0.001, 0)}    ${round(EWW_NET.wlan0.NET_UP * 0.001, 1)}" )
     )
  )

(defwidget timer[]
      (box :valign 'fill' :vexpand true :class "timer"  :space-evenly false :spacing 10
        (box  :hexpand true 
        (circular-progress :value 70  :thickness 5 :class "timerprogress"  (label  :text "25:00"))
        )

        (box :orientation 'v' :spacing 10
        (box :class "btnbox" :orientation 'h' :space-evnly false :spacing 10
          (button "")
          (button '')
             )
        
        
        (box :class "btnbox" :orientation 'h' :space-evnly false :spacing 10
          (button "")
          (button '')
             )
)

    (box :orientation 'v' :class 'timerSlider' :space-evenly false :spacing 10
          (scale 
        :min 0
        :max 100
        :value 30
        :onchange "amixer set Master {}%"
        :orientation 'v'
        :flipped true
        :round-digits 0
        :vexpand true
      ))
             )

      )

(defwidget audioSliders []
  (box :space-evenly false :class 'audioSliders' :spacing 10

    ;; Master
    (box :orientation 'v' :class 'masterSlider' :space-evenly false :spacing 10
      (label :text '' :class 'audioIcon')
      (scale 
        :min 0
        :max 100
        :value 30
        :onchange "amixer set Master {}%"
        :orientation 'v'
        :flipped true
        :round-digits 0
        :vexpand true
      )
    )

    (box :orientation 'v' :class 'minibomb' :hexpand true :space-evenly false
      (timer)
    (box :orientation 'h' :class 'netspeed'  :space-evenly false :hexpand true :spacing 10
      (label :text '   ${pkgUpdates}')
      (label :text '  ${round(EWW_NET.wlan0.NET_DOWN *0.001, 0)}   ${round(EWW_NET.wlan0.NET_DOWN *0.001, 0)}')
      (label :text "MBPS" :halign 'end' :hexpand true) 
    ))
  )
)


(defwidget radialBars[]
  (box :class "radialBars" :space-evenly false  :spacing 15 
    (progressBar
      :value cpu 
      :text ''
      :class 'CPU'
      :boxstyle 'padding:2rem'
      )
   (progressBar
      :value ram
      :text ''
      :class 'RAM'
      :boxstyle 'padding:2rem'
      )
     (battery)
     )
)


(defwidget focal []
  (box :orientation "v" :space-evenly false
    (time)
    (radialBars)
 ))
